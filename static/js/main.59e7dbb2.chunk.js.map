{"version":3,"sources":["App.styled.jsx","components/Searchbar/Searchbar.styled.jsx","components/SearchForm/SearchForm.styled.jsx","components/SearchForm/SearchForm.jsx","components/Searchbar/Searchbar.jsx","components/ImageGalleryItem/ImageGalleryItem.styled.jsx","components/ImageGalleryItem/ImageGalleryItem.jsx","components/ImageGallery/ImageGallery.styled.jsx","components/ImageGallery/ImageGallery.jsx","components/Button/Button.styled.jsx","components/Modal/Modal.styled.jsx","components/Modal/Modal.jsx","services/gallery-api.js","App.jsx","index.js"],"names":["CustomApp","styled","div","CustomSearchbar","header","CustomSearchForm","form","SearchFormButton","button","SearchFormButtonLabel","span","SearchFormInput","input","SearchForm","state","value","handleInputValue","e","setState","target","toLowerCase","handleSubmit","preventDefault","trim","props","onSubmit","resetInput","toast","error","this","type","placeholder","autocomplete","onChange","Component","Searchbar","CurrentImageGalleryItem","li","ImageGalleryItemImage","img","ImageGalleryItem","id","src","alt","onClick","CurrentImageGallery","ul","ImageGallery","images","onSelect","map","image","webformatURL","tags","Button","Overlay","CurrentModal","Img","CloseBtn","modalRoot","document","getElementById","Modal","handleKeyDown","code","onClose","handleBackdropClick","currentTarget","closeModal","window","addEventListener","removeEventListener","createPortal","width","size","API_KEY","imageName","page","a","axios","get","response","status","data","hits","api","fetchImages","Status","App","selectedImage","searchbarInputValueHandler","handleLoadMoreBtnClick","prevState","handleSelectImage","prevProps","length","then","newImages","catch","scrollTo","top","documentElement","scrollHeight","behavior","largeImageURL","color","height","timeout","reactDom","render","StrictMode","querySelector"],"mappings":"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","file":"static/js/main.59e7dbb2.chunk.js","sourcesContent":["import styled from '@emotion/styled';\r\n\r\nexport const CustomApp = styled.div`\r\n  display: grid;\r\n  grid-template-columns: 1fr;\r\n  grid-gap: 16px;\r\n  padding-bottom: 24px;\r\n`;","import styled from '@emotion/styled';\r\n\r\nexport const CustomSearchbar = styled.header`\r\n  top: 0;\r\n  left: 0;\r\n  position: sticky;\r\n  z-index: 1100;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  min-height: 64px;\r\n  padding-right: 24px;\r\n  padding-left: 24px;\r\n  padding-top: 12px;\r\n  padding-bottom: 12px;\r\n  color: #fff;\r\n  background-color: #3f51b5;\r\n  box-shadow: 0px 2px 4px -1px rgba(0, 0, 0, 0.2),\r\n    0px 4px 5px 0px rgba(0, 0, 0, 0.14), 0px 1px 10px 0px rgba(0, 0, 0, 0.12);\r\n`","import styled from '@emotion/styled';\r\n\r\nexport const CustomSearchForm = styled.form`\r\n  display: flex;\r\n  align-items: center;\r\n  width: 100%;\r\n  max-width: 600px;\r\n  background-color: #fff;\r\n  border-radius: 3px;\r\n  overflow: hidden;\r\n`\r\n\r\nexport const SearchFormButton= styled.button`\r\n  display: inline-block;\r\n  width: 48px;\r\n  height: 48px;\r\n  border: 0;\r\n  background-image: url('https://image.flaticon.com/icons/svg/149/149852.svg');\r\n  background-size: 40%;\r\n  background-repeat: no-repeat;\r\n  background-position: center;\r\n  opacity: 0.6;\r\n  transition: opacity 250ms cubic-bezier(0.4, 0, 0.2, 1);\r\n  cursor: pointer;\r\n  outline: none;\r\n    &:hover {\r\n       opacity: 1;\r\n    }\r\n`\r\n\r\n\r\nexport const SearchFormButtonLabel= styled.span`\r\n  position: absolute;\r\n  width: 1px;\r\n  height: 1px;\r\n  padding: 0;\r\n  overflow: hidden;\r\n  clip: rect(0, 0, 0, 0);\r\n  white-space: nowrap;\r\n  clip-path: inset(50%);\r\n  border: 0;\r\n`\r\n\r\nexport const SearchFormInput = styled.input`\r\n  display: inline-block;\r\n  width: 100%;\r\n  font: inherit;\r\n  font-size: 20px;\r\n  border: none;\r\n  outline: none;\r\n  padding-left: 4px;\r\n  padding-right: 4px;\r\n    &::placeholder {\r\n       font: inherit;\r\n       font-size: 18px;\r\n    }\r\n`\r\n","import React, { Component } from 'react';\r\nimport toast, { Toaster } from 'react-hot-toast';\r\nimport { CustomSearchForm, SearchFormButton, SearchFormButtonLabel, SearchFormInput  } from './SearchForm.styled';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport default class SearchForm extends Component {\r\n    state = {\r\n        value: '',\r\n    }\r\n\r\n    static propTypes = {\r\n        value: PropTypes.string,\r\n        onSubmit: PropTypes.func.isRequired,\r\n    }\r\n\r\n    handleInputValue = e => {\r\n        this.setState({ value: e.target.value.toLowerCase()})\r\n    }\r\n\r\n    handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        \r\n        if (this.state.value.trim() === '') {\r\n            // alert('Введите название картинки.'); \r\n            toast.error('Input picture`s name.')\r\n            return;\r\n        }\r\n        this.props.onSubmit(this.state.value);\r\n        this.resetInput();\r\n    }\r\n\r\n    resetInput = () => {\r\n        this.setState({ value: '' });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <CustomSearchForm onSubmit={this.handleSubmit}>\r\n                <SearchFormButton type=\"submit\">\r\n                    <SearchFormButtonLabel>Search</SearchFormButtonLabel>\r\n                </SearchFormButton>\r\n                <SearchFormInput\r\n                    type=\"text\"\r\n                    value = {this.state.value}\r\n                    placeholder = \"Search images and photos\"\r\n                    autocomplete=\"off\"\r\n                    onChange={this.handleInputValue}\r\n                />\r\n                <Toaster/>\r\n            </CustomSearchForm>\r\n        )\r\n    }\r\n    \r\n};","import { CustomSearchbar } from './Searchbar.styled';\r\nimport  SearchForm  from '../SearchForm/SearchForm';\r\n\r\nexport default function Searchbar ({onSubmit}) {\r\n    return(\r\n        <CustomSearchbar>\r\n            <SearchForm onSubmit={onSubmit}/>\r\n        </CustomSearchbar>\r\n    )\r\n}\r\n\r\n","import styled from '@emotion/styled';\r\n\r\nexport const CurrentImageGalleryItem = styled.li`\r\n  border-radius: 2px;\r\n  box-shadow: 0px 1px 3px 0px rgba(0, 0, 0, 0.2),\r\n    0px 1px 1px 0px rgba(0, 0, 0, 0.14), 0px 2px 1px -1px rgba(0, 0, 0, 0.12);\r\n`\r\n\r\nexport const ImageGalleryItemImage = styled.img`\r\n  width: 100%;\r\n  height: 260px;\r\n  object-fit: cover;\r\n  transition: transform 250ms cubic-bezier(0.4, 0, 0.2, 1);\r\n    &:hover {\r\n      transform: scale(1.03);\r\n      cursor: zoom-in;\r\n    }\r\n`\r\n\r\n","import { CurrentImageGalleryItem, ImageGalleryItemImage } from './ImageGalleryItem.styled';\r\n\r\n\r\nexport default function ImageGalleryItem({ id, src, alt, onClick }) {\r\n    return (\r\n        <CurrentImageGalleryItem >\r\n            <ImageGalleryItemImage key={id} src={src} alt={alt} onClick={onClick}/>\r\n        </CurrentImageGalleryItem>\r\n    )\r\n};\r\n\r\n\r\n","import styled from '@emotion/styled';\r\n\r\nexport const CurrentImageGallery = styled.ul`\r\n  display: grid;\r\n  max-width: calc(100vw - 48px);\r\n  grid-template-columns: repeat(auto-fill, minmax(320px, 1fr));\r\n  grid-gap: 16px;\r\n  margin-top: 0;\r\n  margin-bottom: 0;\r\n  padding: 0;\r\n  list-style: none;\r\n  margin-left: auto;\r\n  margin-right: auto;\r\n`","import ImageGalleryItem from '../ImageGalleryItem/ImageGalleryItem';\r\nimport { CurrentImageGallery } from './ImageGallery.styled';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport default function ImageGallery({ images, onSelect }) {\r\n    return (\r\n        <CurrentImageGallery>\r\n            {images && images.map(image => {\r\n                const { id, webformatURL, tags} = image;\r\n                return < ImageGalleryItem key={id} src={webformatURL} alt={tags} onClick={() => onSelect(image)} />\r\n            })}\r\n            \r\n        </CurrentImageGallery>\r\n    );\r\n};\r\n\r\n\r\nImageGallery.propTypes = {\r\n    images: PropTypes.arrayOf(PropTypes.shape({\r\n        id: PropTypes.number.isRequired,\r\n        webformatURL: PropTypes.string.isRequired,\r\n        tags: PropTypes.string.isRequired,\r\n    })),\r\n    onSelect: PropTypes.func.isRequired,\r\n    \r\n}\r\n    ","import styled from '@emotion/styled';\r\n\r\nexport const Button = styled.button`\r\n  padding: 8px 16px;\r\n  border-radius: 2px;\r\n  background-color: #3f51b5;\r\n  transition: all 250ms cubic-bezier(0.4, 0, 0.2, 1);\r\n  text-align: center;\r\n  display: inline-block;\r\n  width: 180px;\r\n  margin-left: auto;\r\n  margin-right: auto;\r\n  color: #fff;\r\n  border: 0;\r\n  text-transform: uppercase;\r\n  cursor: pointer;\r\n  font-family: inherit;\r\n  font-size: 18px;\r\n  line-height: 24px;\r\n  font-style: normal;\r\n  font-weight: 400;\r\n  // min-width: 180px;\r\n  box-shadow: 0px 3px 1px -2px rgba(0, 0, 0, 0.2),\r\n    0px 2px 2px 0px rgba(0, 0, 0, 0.14), 0px 1px 5px 0px rgba(0, 0, 0, 0.12);\r\n    \r\n    &:hover,\r\n    &:focus {\r\n      background-color: #303f9f;\r\n    }\r\n`\r\n\r\n","import styled from '@emotion/styled';\r\n\r\nexport const Overlay = styled.div`\r\n  position: fixed;\r\n  top: 0;\r\n  left: 0;\r\n  width: 100vw;\r\n  height: 100vh;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  background-color: rgba(0, 0, 0, 0.8);\r\n  z-index: 1200;\r\n`\r\n\r\nexport const CurrentModal = styled.div`\r\n  position: relative;\r\n  max-width: calc(100vw - 48px);\r\n  max-height: calc(100vh - 24px);\r\n`\r\n\r\nexport const Img = styled.img`\r\ndisplay: block;`\r\n\r\nexport const CloseBtn = styled.button`\r\nposition: absolute;\r\ntop: 8px;\r\nright: 8px;\r\npadding:1px;\r\nborder: none;\r\ncursor: pointer;\r\n&:hover,\r\n&:focus{\r\n  background-color: #ADD8E6;\r\n}`;","import React, { Component } from 'react';\r\nimport { createPortal } from 'react-dom';\r\nimport { MdClose } from 'react-icons/md';\r\nimport { CurrentModal, Overlay, Img, CloseBtn } from './Modal.styled';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst modalRoot = document.getElementById('modal-root');\r\n\r\nexport default class Modal extends Component {\r\n    static propTypes = {\r\n        onClose: PropTypes.func.isRequired,\r\n        src: PropTypes.string.isRequired,\r\n}\r\n    componentDidMount() {\r\n        window.addEventListener('keydown', this.handleKeyDown);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        window.removeEventListener('keydown', this.handleKeyDown);\r\n    }\r\n\r\n    handleKeyDown = e => {\r\n        if (e.code === 'Escape') {\r\n            this.props.onClose();\r\n        }\r\n    }\r\n\r\n    handleBackdropClick = e => {\r\n        if (e.target === e.currentTarget) {\r\n            // console.log('e.target :>> ', e.target);\r\n            // console.log('e.currentTarget :>> ', e.currentTarget);\r\n            this.props.onClose();\r\n        }\r\n    }\r\n\r\n    closeModal = () => {\r\n        this.props.onClose();\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            createPortal(\r\n                <Overlay onClick={this.handleBackdropClick}>\r\n                    <CurrentModal>\r\n                        <Img src={this.props.src } width='1000px'/>\r\n                        <CloseBtn type='button'onClick={this.closeModal}><MdClose size='2em' /></CloseBtn>\r\n                    </CurrentModal>\r\n                </Overlay>, modalRoot)\r\n        )\r\n    }\r\n};\r\n","import axios from 'axios';\nconst API_KEY = '21768835-de3419a52772d349dcef7b4fc';\n\nasync function fetchImages(imageName, page) {\n  const response = await axios.get(\n    `https://pixabay.com/api/?q=${imageName}&page=${page}&key=${API_KEY}&image_type=photo&orientation=horizontal&per_page=12`,\n  );\n  if (response.status === 200) {\n    return response.data.hits;\n  }\n}\n\nconst api = {\n  fetchImages,\n};\n\nexport default api;\n","import React, { Component } from 'react';\nimport { CustomApp } from './App.styled';\nimport Searchbar from './components/Searchbar/Searchbar';\nimport ImageGallery from './components/ImageGallery/ImageGallery';\nimport {Button} from './components/Button/Button.styled'\nimport Modal from './components/Modal/Modal';\nimport api from './services/gallery-api';\nimport Loader from \"react-loader-spinner\";\nimport toast, { Toaster } from 'react-hot-toast';\n\nconst Status = {\n  IDLE: 'idle',\n  PENDING: 'pending',\n  RESOLVED: 'resolved',\n  REJECTED: 'rejected',\n};\n\n \nexport default class App extends Component {\n    state = {\n        imageName: null,\n        images: [],\n        page: 1,\n        selectedImage:null,\n        status: Status.IDLE,\n        error: null,\n    }\n\n    \n    componentDidUpdate(prevProps, prevState) {\n        const { status, imageName,images, page } = this.state;\n        if (status === Status.RESOLVED && images.length === 0) {\n            // alert(`Oops, we did not find such picture as ${imageName}`);\n            toast.error(`Oops, we did not find such picture as ${imageName}`);\n            this.setState({ status: Status.IDLE });\n        }\n\n        if (status === Status.PENDING) {\n            api\n            .fetchImages(imageName, page)\n            .then(newImages => this.setState(prevState => ({\n                images: [...prevState.images, ...newImages],\n                status: Status.RESOLVED,\n            })))\n            .catch(error => this.setState({ error, status: Status.REJECTED }));\n        }\n\n        window.scrollTo({\n            top: document.documentElement.scrollHeight,\n            behavior: 'smooth',\n        });\n    }\n    \n\n    searchbarInputValueHandler = (value) => {\n        // console.log('value :>> ', value);\n        if (value.trim() !== '') {\n            this.setState({\n                imageName: value,\n                status: Status.PENDING,\n            })\n        }\n\n        if (this.state.imageName !== value) {\n            this.setState({\n                images: [],\n                page: 1,\n            })\n                \n        }\n  }\n\n    handleLoadMoreBtnClick = () => {\n        this.setState(prevState => ({\n            page: prevState.page + 1,\n            status: Status.PENDING,\n        }))\n    }\n\n    handleSelectImage = data => {\n        this.setState({ selectedImage: data, });  \n    }\n\n    closeModal = () => {\n        this.setState({ selectedImage: null, })\n    }\n\n    render() {\n        const { status, images, selectedImage } = this.state;\n        return (\n            <CustomApp>\n                <Searchbar onSubmit={this.searchbarInputValueHandler} />\n                <Toaster />\n                <ImageGallery images={images} onSelect={this.handleSelectImage}/>\n                {status===Status.RESOLVED && <Button type=\"button\" onClick={this.handleLoadMoreBtnClick}>Load more</Button>}\n                {selectedImage && <Modal\n                    src={selectedImage.largeImageURL}\n                    alt={selectedImage.tags}\n                    onClose={this.closeModal}\n                    state={this.state.status} />}\n                {this.state.status === Status.PENDING && <Loader\n                                                            type=\"Circles\"\n                                                            color=\"#00BFFF\" height={300} width={300}\n                                                            timeout={5000} \n                                                        />}\n        </CustomApp>)\n    }\n}\n\n","import React from 'react';\nimport reactDom from 'react-dom';\nimport App from './App.jsx';\nimport './index.css';\n\nreactDom.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.querySelector('#root'),\n);\n"],"sourceRoot":""}